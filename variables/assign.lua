-- 赋值语句

--[[
赋值语句
赋值是改变一个变量的值和改变表域的最基本的方法。

a = "hello" .. "world"
t.n = t.n + 1Lua 可以对多个变量同时赋值，变量列表和值列表的各个元素用逗号分开，赋值语句右边的值会依次赋给左边的变量。
a, b = 10, 2*x       <-->       a=10; b=2*x
遇到赋值语句Lua会先计算右边所有的值然后再执行赋值操作，所以我们可以这样进行交换变量的值：

x, y = y, x                     -- swap 'x' for 'y'
a[i], a[j] = a[j], a[i]         -- swap 'a[i]' for 'a[j]'
当变量个数和值的个数不一致时，Lua会一直以变量个数为基础采取以下策略：

a. 变量个数 > 值的个数             按变量个数补足nil
b. 变量个数 < 值的个数             多余的值会被忽略
--]]

a, b, c = 0, 1
print(a,b,c) -- 0   1   nil

a, b = a+1, b+1, b+2
print(a,b,c) -- 1   2   nil

a, b, c = 'zero'
print(a,b,c) -- 'zero' nil nil

--[[
将函数调用返回给变量：

a, b = f()
f()返回两个值，第一个赋给a，第二个赋给b。

应该尽可能的使用局部变量，有两个好处：

1. 避免命名冲突。
2. 访问局部变量的速度比全局变量更快。
--]]
function test(a, b, c)
  return a+b, b+c
end

val1, val2 = test(1,2,3)
print(val1, val2)

